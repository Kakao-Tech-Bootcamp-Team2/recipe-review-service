name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: kakao-tech-bootcamp-team2/recipe-review-service

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build, unit tests and integration tests
        run: |
          chmod +x gradlew 
          ./gradlew build
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
#      - name: Setup tools # 쿠버네티스 매니페스트 파일 검증을 위한 사전작업
#        uses: alexellis/setup-arkade@v3
#      - name: Install tools
#        uses: alexellis/arkade-get@master # Arkade를 사용하여 지정된 도구를 설치
#        with:
#          kubeconform: latest # kubeconform은 k8s 매니페스트 유효성을 검사하는 도구
#      - name: Validate Kubernetes manifests
#        run: |
#          kubeconform --strict k8s
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/deploy' }}
    needs: [ build ]
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      # 버전 관리 스텝
      - name: Get Version
        id: get_version
        run: |
          VERSIONS=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/orgs/Kakao-Tech-Bootcamp-Team2/packages/container/recipe-review-service/versions")
          
          LATEST_VERSION=$(echo $VERSIONS | jq -r '.[0].metadata.container.tags[]' 2>/dev/null | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n1)
          
          if [ -z "$LATEST_VERSION" ]; then
            echo "version=0.0.1" >> $GITHUB_OUTPUT
            echo "Starting with version 0.0.1"
          else
            MAJOR_MINOR=$(echo $LATEST_VERSION | cut -d. -f1,2)
            PATCH=$(echo $LATEST_VERSION | cut -d. -f3)
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION="$MAJOR_MINOR.$NEW_PATCH"
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
            echo "Incrementing to version $NEW_VERSION"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build container image
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage \
            --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
          fail-build: false
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
      # 새로운 버전 생성 후 매니페스트 업데이트
      - name: Update Kubernetes manifests
        run: |
          # 매니페스트 레포 클론
          git clone https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/Kakao-Tech-Bootcamp-Team2/zipbob-deployment.git
          cd zipbob-deployment
          
          # 이미지 태그 업데이트
          sed -i "s|image: ghcr.io/kakao-tech-bootcamp-team2/recipe-review-service.*|image: ghcr.io/kakao-tech-bootcamp-team2/recipe-review-service:${{ steps.get_version.outputs.version }}|" k8s/applications/production/recipe-review-service.yaml
          
          # 변경사항 커밋 & 푸시
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "Update recipe-review-service to version ${{ steps.get_version.outputs.version }}"
          git push